// /* 
// /*import React, { useState } from 'react';

// const HomePage = () => {
//   const [userArtwork, setUserArtwork] = useState('');
//   const [prompt, setPrompt] = useState('');

//   const handleArtworkRequest = () => {
//     const apiKey = '2667375d-8f2d-448a-8acb-a0c5e20228a2';

//     // Set up the request body with the required parameters
//     const requestBody = {
//       style: 'YOUR_STYLE_ID', // Replace with the desired style ID
//       content: 'YOUR_CONTENT_IMAGE_URL', // Replace with the URL of the content image
//       prompt: prompt // Use the user-entered prompt
//     };

//     // Make the API call to DeepArt
//     fetch('https://api.deepart.io/v1/submit', {
//       method: 'POST',
//       headers: {
//         'Content-Type': 'application/json',
//         'api-key': apiKey,
//       },
//       body: JSON.stringify(requestBody),
//     })
//       .then(response => response.json())
//       .then(data => {
//         // Handle the response from DeepArt
//         // The artwork URL can be obtained from the response data
//         const artworkUrl = data.output_url;

//         // Update the userArtwork state with the received artwork URL
//         setUserArtwork(artworkUrl);
//       })
//       .catch(error => {
//         console.error('Error requesting AI-generated artwork:', error);
//         // Handle error scenarios if necessary
//       });
//   };

//   const handlePromptChange = (event) => {
//     setPrompt(event.target.value);
//   };

//   return (
//     <div className="homepage">
//       <h1>Welcome to Robo Art!</h1>
//       <p>Discover unique and creative artwork generated by robots.</p>
//       <div className="art-gallery">
//         {/* Display a grid of robot-generated artwork */}
//         <div className="artwork">
//           <img src="artwork1.jpg" alt="Artwork 1" />
//           <h3>Artwork 1</h3>
//         </div>
//         <div className="artwork">
//           <img src="artwork2.jpg" alt="Artwork 2" />
//           <h3>Artwork 2</h3>
//         </div>
//         <div className="artwork">
//           <img src="artwork3.jpg" alt="Artwork 3" />
//           <h3>Artwork 3</h3>
//         </div>
//         {/* Add more artwork components as needed */}
//       </div>
//       <div className="user-artwork-container">
//         <h2>Request AI-Generated Artwork</h2>
//         <div className="prompt-input">
//           <label htmlFor="prompt">Enter Your Prompt:</label>
//           <input type="text" id="prompt" value={prompt} onChange={handlePromptChange} />
//         </div>
//         <button className="request-artwork-button" onClick={handleArtworkRequest}>
//           Request Artwork
//         </button>
//         {userArtwork && (
//           <div className="user-artwork">
//             <h3>Your AI-Generated Artwork:</h3>
//             <img src={userArtwork} alt="User Artwork" />
//             <p>{userArtwork}</p>
//           </div>
//         )}
//       </div>
//     </div>
//   );
// };

// export default HomePage;*/ */

import React from 'react';
import { Header, Input, Button } from 'semantic-ui-react';
import '../App.css';
import Footer from './components/Footer';

class Home extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      searchTerm: '',
      randomImages: []
    };
  }

  handleSearchChange = (e) => {
    this.setState({ searchTerm: e.target.value });
  };

  handleSearchSubmit = () => {
    // Perform search logic using the searchTerm
    // and update the randomImages state with the results
  };

  render() {
    return (
      <div className="home-page">
        <Header as="h1">Robo-Art</Header>
        <div className="search-container">
          <Input
            placeholder="Search images..."
            value={this.state.searchTerm}
            onChange={this.handleSearchChange}
          />
          <Button primary onClick={this.handleSearchSubmit}>
            Search
          </Button>
        </div>
        <div className="image-container">
          {this.state.randomImages.length === 0 ? (
            <p>No images found.</p>
          ) : (
            <div>
              {/* Render images */}
            </div>
          )}
        </div>
      </div>
    );
  }
}

export default Home;
